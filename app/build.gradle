plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "de.mannodermaus.android-junit5"  // JUnit 5
    id 'androidx.navigation.safeargs.kotlin'
//    id 'io.objectbox'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "edu.kamshanski.sortgarbagerussia"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // JUnit 5
        testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // KotlinX Time, java.time и др. // Flag to enable support for the new language APIs
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        // Configure JUnit 5, if necessary
        junitPlatform {
            // Configuration goes here!
        }
    }
}
repositories {
    // Depending on AndroidX Snapshot Builds to get the latest CameraX libs.
    maven { url 'https://androidx.dev/snapshots/builds/6787662/artifacts/repository/' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Kotlin extensions
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.core:core-ktx:1.6.0'
    // Kotlin date time
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.2.1"

    //https://medium.com/androiddevelopers/a-safer-way-to-collect-flows-from-android-uis-23080b1f8bda
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-beta01'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'

    // ObjectBox DB
    // DELETE THIS ROW ON RELEASE!
    debugImplementation "io.objectbox:objectbox-android-objectbrowser:$objectboxVersion"
    releaseImplementation "io.objectbox:objectbox-android:$objectboxVersion"

    // REST API
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.7.0"
    debugImplementation 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Java 8+ API desugaring support
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'


    // CameraX core library using the camera2 implementation
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:$camerax_view_version"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:$camerax_extensioins_version"

    // Barcode scan
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "com.google.mlkit:barcode-scanning:$barcode_scanning_version"
    implementation "com.google.mlkit:camera:16.0.0-beta1"

    // Barcode create
    implementation 'com.google.zxing:core:3.4.1'

    ///// test

    // 4) Jupiter API & Test Runner, if you don't have it already
    androidTestImplementation("androidx.test:runner:1.4.0")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:$junit_version")

    // 5) The instrumentation test companion libraries
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.2.2")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.2.2")
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit_version"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    testImplementation 'io.mockk:mockk:1.12.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

configurations {
    // Resolves dependency conflict caused by some dependencies use
    // com.google.guava:guava and com.google.guava:listenablefuture together.
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
apply plugin: 'io.objectbox'